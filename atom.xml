<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Daisf&#39;s blog</title>
  
  <subtitle>不要因懒惰失去遇见美好的机会</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-14T16:02:30.703Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Daisf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>笔趣阁小说下载器制作过程中碰到的部分问题</title>
    <link href="http://yoursite.com/2020/05/14/2020-05-14-%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E4%B8%8B%E8%BD%BD%E5%99%A8%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%A2%B0%E5%88%B0%E7%9A%84%E9%83%A8%E5%88%86%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/05/14/2020-05-14-%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E4%B8%8B%E8%BD%BD%E5%99%A8%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%A2%B0%E5%88%B0%E7%9A%84%E9%83%A8%E5%88%86%E9%97%AE%E9%A2%98/</id>
    <published>2020-05-14T14:57:16.000Z</published>
    <updated>2020-05-14T16:02:30.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h3><p><strong>报错：</strong>‘gb2312’ codec can’t decode byte 0x98 in position 11766: illegal multibyte sequence</p><p><strong>解决方案：</strong></p><p>打开网页：F12 在console输入document.charset 查看编码方式</p><p>await resp.text(encoding=’GBK’)，GBK处改成相应的编码</p><p>如果有些特殊字符是GB18030中有的，但是是gb2312中没有的，则用gb2312去解码，也比较会出错。 所以，此种情况，可以尝试用和当前编码（gb2312）兼容的但所包含字符更多的编码（gb18030）去解码，或许就可以了。</p><p>GB2312，GBK，GB18030，是兼容的，包含的字符个数：GB2312 &lt; GBK &lt; GB18030</p><h3 id="问题二："><a href="#问题二：" class="headerlink" title="问题二："></a>问题二：</h3><p><strong>报错：</strong>AttributeError: module ‘asyncio’ has no attribute ‘run’ </p><p><strong>解决方案：</strong></p><p>asyncio.run is new in Python 3.7. When using older versions of Python, you will need to substitute this with something like the following:</p><p>loop = asyncio.get_event_loop()<br>loop.run_until_complete(main())</p><p>asyncio.run is a Python 3.7 addition. In 3.5-3.6, your example is roughly equivalent to:</p><p>import asyncio</p><p>futures = […]<br>loop = asyncio.get_event_loop()<br>loop.run_until_complete(asyncio.wait(futures))</p>]]></content>
    
    <summary type="html">
    
      一个小工具写了两三天，总算是把该有的功能都实现了，其实碰到了远远不止这么几个问题，先暂且记录下一部分问题吧~
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 7 爬取笔趣阁小说并下载</title>
    <link href="http://yoursite.com/2020/05/11/2020-05-11-Python%E7%88%AC%E8%99%AB-day-7-%E7%88%AC%E5%8F%96%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E5%B9%B6%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2020/05/11/2020-05-11-Python%E7%88%AC%E8%99%AB-day-7-%E7%88%AC%E5%8F%96%E7%AC%94%E8%B6%A3%E9%98%81%E5%B0%8F%E8%AF%B4%E5%B9%B6%E4%B8%8B%E8%BD%BD/</id>
    <published>2020-05-11T07:43:34.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p><strong>2020/5/14 新笔趣阁下载器V2.2</strong></p><p><strong>更新功能如下：</strong></p><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/%E6%96%B0%E7%AC%94%E8%B6%A3%E9%98%81%E4%B8%8B%E8%BD%BD%E5%99%A8V2.2.gif" alt="新笔趣阁下载器V2.2"></p><p><strong>更多详情，请至：<a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1176733&page=1#pid31864204" target="_blank" rel="noopener">吾爱破解</a></strong></p><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200514225501125.png" alt="52破解"></p><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200514225501125.png" alt="image-20200514225501125"></p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><strong>本工具仅作论坛学习交流使用，禁止商业行为，目的只做技术交流，请支持正版！<br>本工具可以实现笔趣阁小说的下载，原理是爬取小说每一章的内容然后拼接在一个txt文件当中。大神请飘过~</strong></p><p><strong>功能：<br>1.保持笔趣阁原本排版，不乱码。<br>2.自动爬取小说名生成txt，免去重命名。<br>3.自动添加章节名。<br>4.下载完成会自动退出。</strong></p><p><strong>缺点：<br>1.单线程爬取，速度较慢。<br>2.没有暂停功能，不想下了关了即可，但不会保存下载进度，重新下载会覆盖原本的下载内容从头开始。<br>3.软件30M+<br>4.没有把笔趣阁在每章开头的一句广告去了，因为吃水不忘挖井人</strong></p><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/bqg1.gif" alt="操作演示"></p><h3 id="下载速度"><a href="#下载速度" class="headerlink" title="下载速度"></a>下载速度</h3><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/bqg2.gif" alt="下载速度"></p><h3 id="txt效果"><a href="#txt效果" class="headerlink" title="txt效果"></a>txt效果</h3><p><img data-src="https://i.loli.net/2020/05/11/THuRmlhGAJsyX4K.gif" alt="下载效果"></p><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><p><strong>作者不是个技术宅，也不从事IT相关，只是觉得有点意思就边学边做,不过碍于技术水平这工具肯定还有很多缺陷，还请多多包涵~有兴趣的可以下载玩玩。</strong></p><p><strong>下载地址：</strong> <a href="https://daisf.lanzous.com/ichlfyj" target="_blank" rel="noopener">https://daisf.lanzous.com/ichlfyj</a></p>]]></content>
    
    <summary type="html">
    
      本工具仅作论坛学习交流使用，禁止商业行为！本工具可以实现笔趣阁小说的下载，原理是爬取小说每一章的内容然后拼接在一个txt文件当中。大神请飘过~
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 6 爬取全国各省市或城市的疫情数据</title>
    <link href="http://yoursite.com/2020/05/01/2020-05-01-Python%E7%88%AC%E8%99%AB-day-6-%E7%88%AC%E5%8F%96%E5%85%A8%E5%9B%BD%E5%90%84%E7%9C%81%E5%B8%82%E6%88%96%E5%9F%8E%E5%B8%82%E7%9A%84%E7%96%AB%E6%83%85%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2020/05/01/2020-05-01-Python%E7%88%AC%E8%99%AB-day-6-%E7%88%AC%E5%8F%96%E5%85%A8%E5%9B%BD%E5%90%84%E7%9C%81%E5%B8%82%E6%88%96%E5%9F%8E%E5%B8%82%E7%9A%84%E7%96%AB%E6%83%85%E6%95%B0%E6%8D%AE/</id>
    <published>2020-05-01T07:48:03.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0、前言"><a href="#0、前言" class="headerlink" title="0、前言"></a>0、前言</h3><p>首先要选择一个合适的网站作为目标，千万不要在一个网站上硬磕，这里推荐两个网站：</p><ol><li><a href="https://news.qq.com/zt2020/page/feiyan.htm?from=timeline&isappinstalled=0#/global" target="_blank" rel="noopener">腾讯</a>，对应json格式疫情数据：<code>https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5</code></li><li><a href="https://news.sina.cn/zt_d/yiqing0121?wm=6122_1221" target="_blank" rel="noopener">新浪</a>，对应json格式疫情数据：<code>https://gwpre.sina.cn/interface/fymap2020_data.json?_=1588258367647&amp;callback=dataAPIData</code></li></ol><p>这里以新浪为例子，讲一下数据是在哪找出的。</p><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/Snipaste_2020-05-01_16-07-40.png" alt="Snipaste_2020-05-01_16-07-40"></p><h3 id="1、爬取并存到excel"><a href="#1、爬取并存到excel" class="headerlink" title="1、爬取并存到excel"></a>1、爬取并存到excel</h3><ul><li><strong>爬取全国疫情数据代码</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/30 20:30</span><br><br><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTMLText</span><span class="hljs-params">(url)</span>:</span><br><span class="hljs-keyword">try</span>:<br>headers = &#123;<br><span class="hljs-string">"user-agent"</span>: <span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) "</span><br>  <span class="hljs-string">"Chrome/80.0.3987.163 Safari/537.36"</span>&#125;<br>r = requests.get(url, timeout=<span class="hljs-number">30</span>, headers=headers)<br>r.raise_for_status()<br>r.encoding = r.apparent_encoding<br>        <span class="hljs-comment"># 注意这里的返回数据是包含在一个js变量中的，用正则处理下就好，group用法自行百度，然后用python自带的json.loads方法就可以转为dict了</span><br>data = re.search(<span class="hljs-string">"\(+([^)]*)\)+"</span>, r.text).group(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">return</span> data<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-string">""</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getYqDate</span><span class="hljs-params">(lst, YqURL)</span>:</span><br>html = getHTMLText(YqURL)<br>hjson = json.loads(html)<br>a = hjson[<span class="hljs-string">'data'</span>][<span class="hljs-string">'list'</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br><span class="hljs-keyword">try</span>:<br>name = i[<span class="hljs-string">'name'</span>]<span class="hljs-comment"># 省份</span><br>value = i[<span class="hljs-string">'value'</span>]<span class="hljs-comment"># 累计确诊</span><br>econNum = i[<span class="hljs-string">'econNum'</span>]<span class="hljs-comment"># 现存确诊</span><br>conadd = i[<span class="hljs-string">'conadd'</span>]<span class="hljs-comment"># 今日确诊</span><br>deathNum = i[<span class="hljs-string">'deathNum'</span>]<span class="hljs-comment"># 累计死亡人数</span><br>cureNum = i[<span class="hljs-string">'cureNum'</span>]<span class="hljs-comment"># 累计治愈</span><br>zerodays = i[<span class="hljs-string">'zerodays'</span>]<span class="hljs-comment"># 零增长天数</span><br>jwsrNum = i[<span class="hljs-string">'jwsrNum'</span>]<span class="hljs-comment"># 境外输入总数</span><br>single_data = [name, value, econNum, conadd, deathNum, cureNum, zerodays, jwsrNum]<br>lst.append(single_data)<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">continue</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeResult</span><span class="hljs-params">(lst, fpath)</span>:</span><br><span class="hljs-keyword">with</span> open(fpath, <span class="hljs-string">'a+'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:<br>f.write(<span class="hljs-string">'省份\t累计确诊\t现存确诊\t今日确诊\t累计死亡人数\t累计治愈\t零增长天数\t境外输入总数\n'</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(lst)):<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(len(lst[i])):<br>f.write(str(lst[i][j]))<br>f.write(<span class="hljs-string">'\t'</span>)<br>f.write(<span class="hljs-string">'\n'</span>)<br>lst.clear()<br>f.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>pagenum = <span class="hljs-number">1</span><br>output_file = <span class="hljs-string">'D:/Personal/Desktop/yq.xls'</span><br>final_data = []<br>url = <span class="hljs-string">"https://gwpre.sina.cn/interface/fymap2020_data.json?_=1588258367647&amp;callback=dataAPIData"</span><br>getYqDate(final_data, url)<br>writeResult(final_data, output_file)<br></code></pre></td></tr></table></figure><ul><li><strong>结果</strong></li></ul><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/Snipaste_2020-05-01_15-21-21.png" alt="Snipaste_2020-05-01_15-21-21"></p><ul><li><strong>爬取福建省各市疫情数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/30 20:45</span><br><br><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTMLText</span><span class="hljs-params">(url)</span>:</span><br>    <span class="hljs-keyword">try</span>:<br>        headers = &#123;<br>            <span class="hljs-string">"user-agent"</span>: <span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) "</span><br>                          <span class="hljs-string">"Chrome/80.0.3987.163 Safari/537.36"</span>&#125;<br>        r = requests.get(url, timeout=<span class="hljs-number">30</span>, headers=headers)<br>        r.raise_for_status()<br>        r.encoding = r.apparent_encoding<br>        data = re.search(<span class="hljs-string">"\(+([^)]*)\)+"</span>, r.text).group(<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> data<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">""</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getYqDate</span><span class="hljs-params">(lst, YqURL)</span>:</span><br>    html = getHTMLText(YqURL)<br>    hjson = json.loads(html)<br>    a = hjson[<span class="hljs-string">'data'</span>][<span class="hljs-string">'list'</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>        <span class="hljs-keyword">if</span> i[<span class="hljs-string">'ename'</span>] == <span class="hljs-string">"fujian"</span>:<br>            city = i[<span class="hljs-string">'city'</span>]<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> city:<br>                name = j[<span class="hljs-string">'name'</span>]  <span class="hljs-comment"># 城市名称</span><br>                value = j[<span class="hljs-string">'conNum'</span>]  <span class="hljs-comment"># 累计确诊</span><br>                econNum = j[<span class="hljs-string">'econNum'</span>]  <span class="hljs-comment"># 现存确诊</span><br>                conadd = j[<span class="hljs-string">'conadd'</span>]  <span class="hljs-comment"># 今日确诊</span><br>                deathNum = j[<span class="hljs-string">'deathNum'</span>]  <span class="hljs-comment"># 累计死亡人数</span><br>                cureNum = j[<span class="hljs-string">'cureNum'</span>]  <span class="hljs-comment"># 累计治愈</span><br>                zerodays = j[<span class="hljs-string">'zerodays'</span>]  <span class="hljs-comment"># 零增长天数</span><br>                single_data = [name, value, econNum, conadd, deathNum, cureNum, zerodays]<br>                lst.append(single_data)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeResult</span><span class="hljs-params">(lst, fpath)</span>:</span><br>    <span class="hljs-keyword">with</span> open(fpath, <span class="hljs-string">'a+'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(<span class="hljs-string">'地区\t累计确诊\t现存确诊\t今日确诊\t累计死亡人数\t累计治愈\t零增长天数\n'</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(lst)):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(len(lst[i])):<br>                f.write(str(lst[i][j]))<br>                f.write(<span class="hljs-string">'\t'</span>)<br>            f.write(<span class="hljs-string">'\n'</span>)<br>        lst.clear()<br>    f.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    pagenum = <span class="hljs-number">1</span><br>    output_file = <span class="hljs-string">'D:/Personal/Desktop/fjyq.xls'</span><br>    final_data = []<br>    url = <span class="hljs-string">"https://gwpre.sina.cn/interface/fymap2020_data.json?_=1588258367647&amp;callback=dataAPIData"</span><br>    getYqDate(final_data, url)<br>    writeResult(final_data, output_file)<br></code></pre></td></tr></table></figure><ul><li><strong>结果</strong></li></ul><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/Snipaste_2020-05-01_15-23-20.png" alt="Snipaste_2020-05-01_15-23-20"></p><p>有兴趣的还可以自行绘制类似网页上的疫情地图哦~</p><h3 id="2、部署到运行在服务器上的机器人"><a href="#2、部署到运行在服务器上的机器人" class="headerlink" title="2、部署到运行在服务器上的机器人"></a>2、部署到运行在服务器上的机器人</h3><ul><li><strong>代码</strong>（注：作为插件配合其他相关依赖使用，详情见：<a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1171812&page=1#pid31746882" target="_blank" rel="noopener">52pojie</a>）</li></ul><p>代码可拓展的空间较大，这里只是随便部署了一下，可以改改回复的排版以及增加使用命令传参的功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/30 22:45</span><br><br><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_command, CommandSession<br><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> on_natural_language, NLPSession, IntentCommand<br><br><br><span class="hljs-meta">@on_command('福建今日疫情', aliases=('福建今日疫情'))</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">yiqing</span><span class="hljs-params">(session: CommandSession)</span>:</span><br>    results = []<br>    alist = []<br>    url = <span class="hljs-string">"https://gwpre.sina.cn/interface/fymap2020_data.json?_=1588258367647&amp;callback=dataAPIData"</span><br>    headers = &#123;<br>                 <span class="hljs-string">"user-agent"</span>: <span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) "</span><br>                 <span class="hljs-string">"Chrome/80.0.3987.163 Safari/537.36"</span>&#125;<br>    r = requests.get(url, timeout=<span class="hljs-number">30</span>, headers=headers)<br>    r.raise_for_status()<br>    r.encoding = r.apparent_encoding<br>    data = re.search(<span class="hljs-string">"\(+([^)]*)\)+"</span>, r.text).group(<span class="hljs-number">1</span>)<br>    hjson = json.loads(data)<br>    a = hjson[<span class="hljs-string">'data'</span>][<span class="hljs-string">'list'</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>        <span class="hljs-keyword">if</span> i[<span class="hljs-string">'ename'</span>] == <span class="hljs-string">'fujian'</span>:<br>            city = i[<span class="hljs-string">'city'</span>]<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> city:<br>                name = j[<span class="hljs-string">'name'</span>]  <span class="hljs-comment"># 城市名称</span><br>                value = j[<span class="hljs-string">'conNum'</span>]  <span class="hljs-comment"># 累计确诊</span><br>                econNum = j[<span class="hljs-string">'econNum'</span>]  <span class="hljs-comment"># 现存确诊</span><br>                conadd = j[<span class="hljs-string">'conadd'</span>]  <span class="hljs-comment"># 今日确诊</span><br>                deathNum = j[<span class="hljs-string">'deathNum'</span>]  <span class="hljs-comment"># 累计死亡人数</span><br>                cureNum = j[<span class="hljs-string">'cureNum'</span>]  <span class="hljs-comment"># 累计治愈</span><br>                zerodays = j[<span class="hljs-string">'zerodays'</span>]  <span class="hljs-comment"># 零增长天数</span><br>                single_str = [name + <span class="hljs-string">'\n'</span> + <span class="hljs-string">"累计确诊："</span> + value + <span class="hljs-string">'\n'</span> +   <span class="hljs-string">"现存确诊："</span> + econNum + <span class="hljs-string">'\n'</span> + <br>                <span class="hljs-string">"今日确诊："</span> + conadd + <span class="hljs-string">'\n'</span> +  <span class="hljs-string">"累计死亡人数："</span> + deathNum + <span class="hljs-string">'\n'</span> + <span class="hljs-string">"累计治愈："</span> + cureNum + <br>                <span class="hljs-string">'\n'</span> +  <span class="hljs-string">"零增长天数："</span> + zerodays + <span class="hljs-string">'\n'</span>]<br>                results.append(single_str)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(results)):<br>        alist = alist + results[i]<span class="hljs-comment"># 将列表里字符串的列表外壳去掉</span><br>    <span class="hljs-keyword">await</span> session.send(<span class="hljs-string">''</span>.join(alist))<span class="hljs-comment"># 将列表里的字符串拼接并输出</span><br></code></pre></td></tr></table></figure><ul><li><strong>演示</strong></li></ul><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/yiqing.gif" alt="yiqing"></p>]]></content>
    
    <summary type="html">
    
      女朋友说有个作业需要统计疫情数据并绘制地图，但又不想从网页上一个一个数据抄下来做成表格，于是。。。工具人上线，最后还顺便部署到机器人上了，废话不多说，开干吧！接下来得花点时间在毕设上了，虽然感觉不太现实- -
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 5 爬取起点中文网小说月票排行</title>
    <link href="http://yoursite.com/2020/04/30/2020-04-30-Python%E7%88%AC%E8%99%AB-day-5-%E7%88%AC%E5%8F%96%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91%E5%B0%8F%E8%AF%B4%E6%9C%88%E7%A5%A8%E6%8E%92%E8%A1%8C/"/>
    <id>http://yoursite.com/2020/04/30/2020-04-30-Python%E7%88%AC%E8%99%AB-day-5-%E7%88%AC%E5%8F%96%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91%E5%B0%8F%E8%AF%B4%E6%9C%88%E7%A5%A8%E6%8E%92%E8%A1%8C/</id>
    <published>2020-04-30T10:22:35.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/30 16:00</span><br><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> requests<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTMLText</span><span class="hljs-params">(url)</span>:</span><br><span class="hljs-keyword">try</span>:<br>headers = &#123;<br><span class="hljs-string">"user-agent"</span>: <span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) "</span><br>  <span class="hljs-string">"Chrome/80.0.3987.163 Safari/537.36"</span>&#125;<br>r = requests.get(url, timeout=<span class="hljs-number">30</span>, headers=headers)<br>r.raise_for_status()<br>r.encoding = r.apparent_encoding<br><span class="hljs-keyword">return</span> r.text<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-string">""</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getYuepiaoList</span><span class="hljs-params">(lst, YuepiaoURL)</span>:</span><br>html = getHTMLText(YuepiaoURL)<br>hjson = json.loads(html)<br>a = hjson[<span class="hljs-string">'data'</span>][<span class="hljs-string">'records'</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br><span class="hljs-keyword">try</span>:<br>bid = i[<span class="hljs-string">'bid'</span>]<br>bName = i[<span class="hljs-string">'bName'</span>]<br>bAuth = i[<span class="hljs-string">'bAuth'</span>]<br>desc = i[<span class="hljs-string">'desc'</span>]<br>cat = i[<span class="hljs-string">'cat'</span>]<br>catId = i[<span class="hljs-string">'catId'</span>]<br>cnt = i[<span class="hljs-string">'cnt'</span>]<br>rankCnt = i[<span class="hljs-string">'rankCnt'</span>]<br>rankNum = i[<span class="hljs-string">'rankNum'</span>]<br>single_data = [rankNum, bName, bAuth, desc, rankCnt]<br>lst.append(single_data)<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">continue</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeResult</span><span class="hljs-params">(pagenum, lst, fpath)</span>:</span><br><span class="hljs-keyword">with</span> open(fpath, <span class="hljs-string">'a+'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:<br><span class="hljs-keyword">if</span> pagenum == <span class="hljs-number">1</span>:<br>f.write(<span class="hljs-string">'月票排名\t书名\t作者\t简介\t月票数\n'</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(lst)):<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(len(lst[i])):<br>f.write(str(lst[i][j]))<br>f.write(<span class="hljs-string">'\t'</span>)<br>f.write(<span class="hljs-string">'\n'</span>)<br>lst.clear()<br>f.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>pagenum = <span class="hljs-number">1</span><br>output_file = <span class="hljs-string">'D:/Personal/Desktop/story.xls'</span><br>final_data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">3</span>):<br>url = <span class="hljs-string">"https://m.qidian.com/majax/rank/yuepiaolist?_csrfToken=gA9RhhkaJwVdxBVFV1e0aX7bfkq2jMHnlnNUEDOl&amp;gender=male&amp;pageNum="</span> + str(<br>pagenum) + <span class="hljs-string">"&amp;catId=-1&amp;yearmonth=202004"</span><br>getYuepiaoList(final_data, url)<br>writeResult(pagenum, final_data, output_file)<br>pagenum += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>程序比较简单，难点就是要找到<code>[&#39;data&#39;][&#39;records&#39;]</code>,首先我们要打开<a href="https://m.qidian.com/rank/yuepiao/male?gender=male&catId=-1&yearmonth=202004" target="_blank" rel="noopener">原创风云榜-起点中文网</a>，因为静态页面只显示了排名在前20的小说，找不到之后的排名，此时我们F12打开network，点击XHR，往下滚动页面就会发现多出了<code>yuepiaolist?_···</code>，查看preview发现数据都在这呢，为了查看方便，你也可以open in new tab，然后全选复制代码到<a href="http://json.cn/" target="_blank" rel="noopener">json在线解析</a>,这样会比较直观清楚一些。</p><p><img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/Snipaste_2020-04-30_17-47-55.png" alt="Snipaste_2020-04-30_17-47-55"></p>]]></content>
    
    <summary type="html">
    
      放了好几天没有学习爬虫了，要么在忙学校的事情，要么就是去浪了，爬取静态的html页面已经不能满足我的需求了，网站也有很多反爬的机制，所以每次爬取想要的内容都像是在攻克一道难题，找突破点，至于方法，其实都是大同小异，关键还是要找到你要的数据藏在哪了，怎么把他挖出来转变为我们读得懂的信息。
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Next添加点击效果以及简易地禁用鼠标的部分操作</title>
    <link href="http://yoursite.com/2020/04/24/2020-04-24-Next%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C%E4%BB%A5%E5%8F%8A%E7%AE%80%E6%98%93%E5%9C%B0%E7%A6%81%E7%94%A8%E9%BC%A0%E6%A0%87%E7%9A%84%E9%83%A8%E5%88%86%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/04/24/2020-04-24-Next%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C%E4%BB%A5%E5%8F%8A%E7%AE%80%E6%98%93%E5%9C%B0%E7%A6%81%E7%94%A8%E9%BC%A0%E6%A0%87%E7%9A%84%E9%83%A8%E5%88%86%E6%93%8D%E4%BD%9C/</id>
    <published>2020-04-24T08:11:08.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、添加鼠标点击效果（小红心以及核心价值观文字）"><a href="#一、添加鼠标点击效果（小红心以及核心价值观文字）" class="headerlink" title="一、添加鼠标点击效果（小红心以及核心价值观文字）"></a>一、添加鼠标点击效果（小红心以及核心价值观文字）</h3><ol><li>在<code>../hexo/themes/next/source/js/</code>目录下新建<code>love-click.js</code>：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* 爱心特效 */</span><br><br>!<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, a</span>) </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">r</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; s.length; e++) s[e].alpha &lt;= <span class="hljs-number">0</span> ? (t.body.removeChild(s[e].el), s.splice(e, <span class="hljs-number">1</span>)) : (s[e].y--, s[e].scale += <span class="hljs-number">.004</span>, s[e].alpha -= <span class="hljs-number">.013</span>, s[e].el.style.cssText = <span class="hljs-string">"left:"</span> + s[e].x + <span class="hljs-string">"px;top:"</span> + s[e].y + <span class="hljs-string">"px;opacity:"</span> + s[e].alpha + <span class="hljs-string">";transform:scale("</span> + s[e].scale + <span class="hljs-string">","</span> + s[e].scale + <span class="hljs-string">") rotate(45deg);background:"</span> + s[e].color + <span class="hljs-string">";z-index:99999"</span>);<br>    requestAnimationFrame(r)<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> t = <span class="hljs-string">"function"</span> == <span class="hljs-keyword">typeof</span> e.onclick &amp;&amp; e.onclick;<br>    e.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>      t &amp;&amp; t(), o(e)<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> a = t.createElement(<span class="hljs-string">"div"</span>);<br>    a.className = <span class="hljs-string">"heart"</span>, s.push(&#123;<br>      el: a,<br>      x: e.clientX - <span class="hljs-number">5</span>,<br>      y: e.clientY - <span class="hljs-number">5</span>,<br>      scale: <span class="hljs-number">1</span>,<br>      alpha: <span class="hljs-number">1</span>,<br>      color: c()<br>    &#125;), t.body.appendChild(a)<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> a = t.createElement(<span class="hljs-string">"style"</span>);<br>    a.type = <span class="hljs-string">"text/css"</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>      a.appendChild(t.createTextNode(e))<br>    &#125; <span class="hljs-keyword">catch</span> (t) &#123;<br>      a.styleSheet.cssText = e<br>    &#125;<br>    t.getElementsByTagName(<span class="hljs-string">"head"</span>)[<span class="hljs-number">0</span>].appendChild(a)<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">"rgb("</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-built_in">Math</span>.random()) + <span class="hljs-string">","</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-built_in">Math</span>.random()) + <span class="hljs-string">","</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-built_in">Math</span>.random()) + <span class="hljs-string">")"</span><br>  &#125;<br>  <span class="hljs-keyword">var</span> s = [];<br>  e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    setTimeout(e, <span class="hljs-number">1e3</span> / <span class="hljs-number">60</span>)<br>  &#125;, i(<span class="hljs-string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), n(), r()<br>&#125;(<span class="hljs-built_in">window</span>, <span class="hljs-built_in">document</span>);<br><br><span class="hljs-comment">/* 社会主体核心价值观效果 */</span><br><span class="hljs-keyword">var</span> a_idx = <span class="hljs-number">0</span>;<br>jQuery(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$</span>) </span>&#123;<br>  $(<span class="hljs-string">"body"</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">"富强"</span>, <span class="hljs-string">"民主"</span>, <span class="hljs-string">"文明"</span>, <span class="hljs-string">"和谐"</span>, <span class="hljs-string">"自由"</span>, <span class="hljs-string">"平等"</span>, <span class="hljs-string">"公正"</span>, <span class="hljs-string">"法治"</span>, <span class="hljs-string">"爱国"</span>, <span class="hljs-string">"敬业"</span>, <span class="hljs-string">"诚信"</span>, <span class="hljs-string">"友善"</span>);<br>    <span class="hljs-keyword">var</span> $i = $(<span class="hljs-string">"&lt;span/&gt;"</span>).text(a[a_idx]);<br>    a_idx = (a_idx + <span class="hljs-number">1</span>) % a.length;<br>    <span class="hljs-keyword">var</span> x = e.pageX,<br>      y = e.pageY;<br>    $i.css(&#123;<br>      <span class="hljs-string">"z-index"</span>: <span class="hljs-number">100000000</span>,<br>      <span class="hljs-string">"top"</span>: y - <span class="hljs-number">20</span>,<br>      <span class="hljs-string">"left"</span>: x,<br>      <span class="hljs-string">"position"</span>: <span class="hljs-string">"absolute"</span>,<br>      <span class="hljs-string">"font-weight"</span>: <span class="hljs-string">"bold"</span>,<br>      <span class="hljs-string">"color"</span>: <span class="hljs-string">"#ff6651"</span><br>    &#125;);<br>    $(<span class="hljs-string">"body"</span>).append($i);<br>    $i.animate(&#123;<br>      <span class="hljs-string">"top"</span>: y - <span class="hljs-number">180</span>,<br>      <span class="hljs-string">"opacity"</span>: <span class="hljs-number">0</span><br>    &#125;, <span class="hljs-number">1500</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>      $i.remove();<br>    &#125;);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><ol start="2"><li>在<code>../hexo/themes/next/layout/_layout.swig</code>末尾添加引用：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 鼠标点击特效 --&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/js/love-click.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br> <span class="hljs-comment">&lt;!-- 禁止右键菜单，拖动，选中 --&gt;</span><br></code></pre></td></tr></table></figure><p>注意要放在<code>&lt;/body&gt;</code>之前。</p><h3 id="二、禁止右键菜单、选中以及拖动功能"><a href="#二、禁止右键菜单、选中以及拖动功能" class="headerlink" title="二、禁止右键菜单、选中以及拖动功能"></a>二、禁止右键菜单、选中以及拖动功能</h3><p>在<code>../hexo/themes/next/layout/_layout.swig</code>末尾添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-comment">&lt;!-- 禁止右键菜单，拖动，选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">oncontextmenu</span>=<span class="hljs-string">'return false'</span> <span class="hljs-attr">ondragstart</span>=<span class="hljs-string">'return false'</span> <span class="hljs-attr">onselectstart</span> =<span class="hljs-string">'return false'</span>&gt;</span><br></code></pre></td></tr></table></figure><p>具体位置同上，这里给出图片让大家更清楚一些：<img data-src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200424161845270.png" alt=""></p><p>还可自行百度<code>html禁用复制代码</code>根据需要自行添加。</p><h3 id="三、未成功"><a href="#三、未成功" class="headerlink" title="三、未成功"></a>三、未成功</h3><ol start="2"><li>更改鼠标样式。</li><li>代码高亮。</li><li>代码复制。</li><li>添加分享功能。</li></ol><p>addthis在开启了<code>fancybox</code>之后忽隐忽现，不开则不出现，手机端出现地频率多些。</p><p>如果关闭了<code>fancybox</code>还会使核心价值观文字特效失效。</p>]]></content>
    
    <summary type="html">
    
      每次美化主题的时候老是会想着多增加点功能，多完善下主题，奈何主题地不断更新，导致网上地许多办法都失效了，再加上Next本身也存在一些功能冲突，也就是Bug，对于小白来说真的是挺折腾的，没想到一款为了让博主更加注重内容的主题反倒让我本末倒置。。。
    
    </summary>
    
    
      <category term="网站相关" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+DaoVoice实现网页在线通讯功能</title>
    <link href="http://yoursite.com/2020/04/23/2020-04-23-Hexo+DaoVoice%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E5%9C%A8%E7%BA%BF%E9%80%9A%E8%AE%AF%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2020/04/23/2020-04-23-Hexo+DaoVoice%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E5%9C%A8%E7%BA%BF%E9%80%9A%E8%AE%AF%E5%8A%9F%E8%83%BD/</id>
    <published>2020-04-23T10:20:20.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><p><a href="http://dashboard.daovoice.io/app/339ec5d6" target="_blank" rel="noopener">DaoVoice官网</a></p><ol><li><p>先注册，注册之后，在左侧菜单栏点击<strong>应用设置</strong>，在这里你可以定制你的聊天框，然后点击<strong>安装到网站</strong>，往下翻，找到你的<strong>app_id</strong>。<img src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200423181651158.png" alt=""></p></li><li><p>在next主题的配置文件中（\themes\next_config.yml），新增如下内容：</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Online contact</span><br><span class="hljs-attr">daovoice:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">daovoice_app_id:</span> <span class="hljs-string">这里替换成你DaoVoice上的appid</span><br></code></pre></td></tr></table></figure><p>再到\themes\next\layout_partials\head.swig文件的最后，新增如下内容：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.daovoice %&#125;</span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice")</span><br><span class="xml">  daovoice('init', &#123;</span><br><span class="xml">      app_id: "</span><span class="hljs-template-variable">&#123;&#123;theme.daovoice_app_id&#125;&#125;</span><span class="xml">"</span><br><span class="xml">    &#125;);</span><br><span class="xml">  daovoice('update');</span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>重新部署</li></ol><p>现在就可以在网站上看到你的聊天框了，是不是很简单呢，部署前你也可以先在本地测试一下。</p><p><strong>注意：</strong>如果出现一些显示不正常，多半是冲突了，我是因为开启了pjax的缘故，就导致每次打开新的页面会出现空白内容，只剩一个侧边栏，必须刷新一下才能显示正常，把pjax关了就好了。</p>]]></content>
    
    <summary type="html">
    
      如果你发了一篇文章，读者看了，觉得有不懂的地方，想要联系到你。评论留言可能反馈太慢，发邮件联系你又麻烦。Next自带的我试了下Tidio,逼格太高，不适合我朴素的小站，还是国外的产品，很多地方改成我们习惯的方式挺麻烦的。现在DaoVoice就可以解决这个痛点，及时在线通讯，直接联系到作者。DaoVoice还打通了微信端，在网页上发送的消息，会直接推送到作者的微信上，另有小程序支持消息回复等，非常方便。
    
    </summary>
    
    
      <category term="网站相关" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="daovoice" scheme="http://yoursite.com/tags/daovoice/"/>
    
  </entry>
  
  <entry>
    <title>PicGo+Gitee</title>
    <link href="http://yoursite.com/2020/04/23/2020-04-23-PicGo+Gitee/"/>
    <id>http://yoursite.com/2020/04/23/2020-04-23-PicGo+Gitee/</id>
    <published>2020-04-22T16:26:41.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>Gitee也有许多自身的缺点，比如容量的限制和禁止大量外链的声明。。。万一哪天被删库了就gg了。</p><p><img src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200423002641422.png" alt=""></p><h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1. 安装插件"></a>1. 安装插件</h3><p>怎么安装插件我上一篇文章说了，这里要注意的是要安装<strong>gitee-uploader 1.1.2</strong>这个版本,不要安装左边那个带beta的,如果是离线安装,则要选择对应的<strong>picgo-plugin-gitee-uploader</strong> clone,因为我测试<strong>picgo-plugin-gitee</strong>不成功。</p><h3 id="2-建立gitee（码云）图床库"><a href="#2-建立gitee（码云）图床库" class="headerlink" title="2. 建立gitee（码云）图床库"></a>2. 建立gitee（码云）图床库</h3><p>注册码云的方法很简单，不多说了，我们直接建立自己的图床库。<br>点击右上角的+号，新建仓库<br>新建仓库的要点如下：</p><ol><li><h5 id="输入一个仓库名称"><a href="#输入一个仓库名称" class="headerlink" title="输入一个仓库名称"></a>输入一个仓库名称</h5></li><li><h5 id="其次将仓库设为公开"><a href="#其次将仓库设为公开" class="headerlink" title="其次将仓库设为公开"></a>其次将仓库设为公开</h5></li><li><h5 id="勾选使用Readme文件初始化这个仓库"><a href="#勾选使用Readme文件初始化这个仓库" class="headerlink" title="勾选使用Readme文件初始化这个仓库"></a>勾选使用Readme文件初始化这个仓库</h5></li></ol><p><img src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200423004646627.png" alt=""></p><p>点击创建进入下一步（我这里已经创建了blogimage,所以前面加了个d以作示范,下面仍是blogimage）。</p><h3 id="3-获取token"><a href="#3-获取token" class="headerlink" title="3. 获取token:"></a>3. 获取token:</h3><ol><li>点击头像，进入设置</li><li>找到左边安全设置里面的私人令牌</li><li>点击<strong>生成新令牌</strong>，把<strong>projects</strong>这一项勾上，其他的不用勾，然后提交</li><li>这里需要验证一下密码，验证密码之后会出来一串数字，这一串数字就是你的token，这串数字只出现一次，到配置之前要将这串数字保存好。</li></ol><h3 id="4-配置PicGo"><a href="#4-配置PicGo" class="headerlink" title="4. 配置PicGo"></a>4. 配置PicGo</h3><p>   安装了<strong>gitee-uploader 1.1.2</strong>插件之后，我们开始配置插件</p><p>   配置插件的要点如下：</p><p> <img src="https://gitee.com/daisf666/blogimage/raw/master/img/image-20200423005344922.png" alt=""></p><ul><li><p>repo：用户名/仓库名称，比如我自己的仓库daisf666/blogImage</p></li><li><p>branch：分支，这里写上master</p></li><li><p>token：填入码云的私人令牌</p></li><li><p>path：路径，一般写上img</p></li><li><p>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 Upload 图片名 by picGo - 时间</p></li></ul><p>现在保存你刚才的配置，然后将它设置为默认图床，大功告成。</p><p><strong>随便选一张图片上传试试看，PicGo也支持剪贴板上传，配上win10的<em>Snipaste</em>截图神器，简直是利器！</strong></p>]]></content>
    
    <summary type="html">
    
      PicGo配合Github不加速的话是会比Gitee慢的，而且还老是出毛病，动不动上传失败，毕竟服务器在海外，也在所难免，这里就介绍一下怎么配合Gitee部署,同理，Github配置也差不多，这里就不多说了。
    
    </summary>
    
    
      <category term="网站相关" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="图床" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>PicGo不为人知的一些小技巧</title>
    <link href="http://yoursite.com/2020/04/22/2020-04-22-PicGo%E4%B8%8D%E4%B8%BA%E4%BA%BA%E7%9F%A5%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2020/04/22/2020-04-22-PicGo%E4%B8%8D%E4%B8%BA%E4%BA%BA%E7%9F%A5%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2020-04-22T12:16:54.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><ul><li><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></li><li><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a></li></ul><h3 id="一、离线安装插件"><a href="#一、离线安装插件" class="headerlink" title="一、离线安装插件"></a>一、离线安装插件</h3><p>不知道是我自己的问题还是PicGo的问题，我始终都无法在gui完成在线安装，即使是在我重装了PicGo或者重启电脑之后，总是会弹出加载插件错误的提示。去Github看了一眼，在某些插件的介绍文档中，发现了离线安装的方式，我用的是windows，下面给出我的安装步骤：</p><ol><li><p>到<strong>C:\Users\MACHENIKE\AppData\Roaming\picgo</strong>目录下，右键“Git bush here”，clone GitHub上的插件项目到此目录。</p></li><li><pre><code class="bash">npm install ./插件名 或者 npm i picgo-plugin-gitee <span class="comment"># 比如安装支持Gitee的插件</span></code></pre></li></ol><p>到此就安装完成了，是不是很简单，重启PicGo之后就可以看到插件。</p><p>（后来发现可以直接把在线安装出现在桌面的包放到该目录下，重启也有效）</p><p>其他安装方式：</p><p><img src="https://i.loli.net/2020/04/22/sgRIzSdb7JNjeZy.png" alt=""></p><h3 id="二、开启Typora自动上传功能"><a href="#二、开启Typora自动上传功能" class="headerlink" title="二、开启Typora自动上传功能"></a>二、开启Typora自动上传功能</h3><p>怎么让图片上传更加便捷呢？现在让我们打开Typora的偏好设置，进行如下操作：</p><p><img src="https://i.loli.net/2020/04/22/mDHuoLQx3hf9Ili.png" alt=""></p><p>为了更直观地体现此功能，下面给出一张gif：</p><p><img src="https://gitee.com/daisf666/blogimage/raw/master/img/typora-upload-image-gif-v2.gif" alt="typora-upload-image-gif-v2"></p><p>如果你未开启自动上传图片的功能，把图片拖入 Typora 或者粘贴到 Typora，右键图片将会看到一个上传图片的选项，在将图片复制到文章中的时候也会自动显示该选项。在文章目录下会有个<strong>upload</strong>文件夹储存图片到本地。<strong>注意如果图床存在同名文件上传是会失败的。</strong></p>]]></content>
    
    <summary type="html">
    
      PicGo可以支持多款插件，还可以配合Typora的自动上传功能，这两者加起来，简直是写作利器，这里顺便解决一下插件无法在线安装的问题。
    
    </summary>
    
    
      <category term="网站相关" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="图床" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 4 爬取天天基金网的基金净值</title>
    <link href="http://yoursite.com/2020/04/22/2020-04-22-Python%E7%88%AC%E8%99%AB-day-4-%E7%88%AC%E5%8F%96%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91%E7%BD%91%E7%9A%84%E5%9F%BA%E9%87%91%E5%87%80%E5%80%BC/"/>
    <id>http://yoursite.com/2020/04/22/2020-04-22-Python%E7%88%AC%E8%99%AB-day-4-%E7%88%AC%E5%8F%96%E5%A4%A9%E5%A4%A9%E5%9F%BA%E9%87%91%E7%BD%91%E7%9A%84%E5%9F%BA%E9%87%91%E5%87%80%E5%80%BC/</id>
    <published>2020-04-22T10:24:15.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>选取网站进行爬取时，应尽量选择基金信息静态存在于HTML页面中而非js代码生成的网站，还要注意Robots协议的限制。当进行模拟人的信息搜集且不会对网站造成性能损坏和经济损失的时候，我们可以适当忽略robots协议。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/22 15:00</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> traceback<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTMLText</span><span class="hljs-params">(url)</span>:</span><br><span class="hljs-keyword">try</span>:<br>headers = &#123;<br><span class="hljs-string">"user-agent"</span>: <span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) "</span><br>  <span class="hljs-string">"Chrome/80.0.3987.163 Safari/537.36"</span>&#125;<br>r = requests.get(url, timeout=<span class="hljs-number">30</span>, headers=headers)<br>r.raise_for_status()<br>r.encoding = r.apparent_encoding<br><span class="hljs-keyword">return</span> r.text<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-string">""</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getFundList</span><span class="hljs-params">(lst, fundURL)</span>:</span><br>html = getHTMLText(fundURL)<br>soup = BeautifulSoup(html, <span class="hljs-string">'html.parser'</span>)<br>a = soup.find_all(<span class="hljs-string">'tr'</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br><span class="hljs-keyword">try</span>:<br>id = i.attrs[<span class="hljs-string">'id'</span>]<br><span class="hljs-comment"># re.findall返回的是list，这里我们要把它转换为str，这里list里面就只有一个str的元素，这么做（指[0]）是为了下面url的赋值。</span><br>lst.append(re.findall(<span class="hljs-string">r'tr\d&#123;6&#125;'</span>, id)[<span class="hljs-number">0</span>])<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">continue</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getFundIofo</span><span class="hljs-params">(lst, fundURL, fpath)</span>:</span><br><span class="hljs-comment"># 打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</span><br><span class="hljs-keyword">with</span> open(fpath, <span class="hljs-string">'w'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:<br>f.write(<span class="hljs-string">"基金信息"</span> + <span class="hljs-string">'\n'</span>)<br><span class="hljs-keyword">for</span> fund <span class="hljs-keyword">in</span> lst:<br>url = fundURL + fund[<span class="hljs-number">2</span>:] + <span class="hljs-string">'.html'</span>  <span class="hljs-comment"># 因为lst储存的是trxxxxxx，这里我们只需要xxxxxx，故从第3位也就是0、1、2的2开始到结束。</span><br>html = getHTMLText(url)<br><span class="hljs-keyword">try</span>:<br><span class="hljs-keyword">if</span> html == <span class="hljs-string">''</span>:<br><span class="hljs-keyword">continue</span><br>infoDict = &#123;&#125;<br>soup = BeautifulSoup(html, <span class="hljs-string">"html.parser"</span>)<br>foundInfo = soup.find(<span class="hljs-string">'div'</span>, attrs=&#123;<span class="hljs-string">'class'</span>:<span class="hljs-string">"merchandiseDetail"</span>&#125;)<br>name = foundInfo.find(attrs=&#123;<span class="hljs-string">'class'</span>: <span class="hljs-string">"fundDetail-tit"</span>&#125;)<br>infoDict.update(&#123;<span class="hljs-string">'基金名称'</span>: name.text.split()[<span class="hljs-number">0</span>]&#125;)<br>keyList = foundInfo.find_all(<span class="hljs-string">'dt'</span>)<br>valueList = foundInfo.find_all(<span class="hljs-string">'dd'</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(keyList)):<br>key = keyList[i].text.split(<span class="hljs-string">'净值估算每'</span>, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<span class="hljs-comment"># 去掉多于备注："净值估算每个交易日XXXX请以基金管理人披露净值为准。"</span><br>val = valueList[<span class="hljs-number">3</span>*i].text<span class="hljs-comment"># 这里每个dt下有3个dd，我们只需要0，3，6去一一对应key的0，1，2</span><br>infoDict[key] = val<br><span class="hljs-comment"># 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</span><br><span class="hljs-keyword">with</span> open(fpath, <span class="hljs-string">'a'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:<br>f.write(str(infoDict) + <span class="hljs-string">'\n'</span>)<br>f.close()<br><span class="hljs-keyword">except</span>:<br>traceback.print_exc()<br><span class="hljs-keyword">continue</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>fund_list_url = <span class="hljs-string">"https://fund.eastmoney.com/fund.html#os_0;isall_0;ft_;pt_1"</span><br>fund_info_url = <span class="hljs-string">"https://fund.eastmoney.com/"</span><br>output_file = <span class="hljs-string">'D:/Fundinfo.txt'</span><br>slist = []<br>getFundList(slist, fund_list_url)<br>getFundIofo(slist, fund_info_url, output_file)<br></code></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://i.loli.net/2020/04/22/kfTvj69AYCtNQg4.png" alt=""></p><p>感兴趣的话你也可以将其储存到excel中，会更加直观清楚。</p>]]></content>
    
    <summary type="html">
    
      爬取天天基金网的基金净值。
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 3 爬取淘宝Dior口红价格</title>
    <link href="http://yoursite.com/2020/04/21/2020-04-21-Python%E7%88%AC%E8%99%AB-day-3-%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9DDior%E5%8F%A3%E7%BA%A2%E4%BB%B7%E6%A0%BC/"/>
    <id>http://yoursite.com/2020/04/21/2020-04-21-Python%E7%88%AC%E8%99%AB-day-3-%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9DDior%E5%8F%A3%E7%BA%A2%E4%BB%B7%E6%A0%BC/</id>
    <published>2020-04-20T16:30:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>爬取网站数据时请先查看该网站的robots.txt协议，禁止非法爬取！本次爬取仅作类人行为的爬虫练习，敬请谅解。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/21 21:30</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTMLText</span><span class="hljs-params">(url)</span>:</span><br><span class="hljs-keyword">try</span>:<br>headers = &#123;<br><span class="hljs-string">"user-agent"</span>: <span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36"</span>,<br><span class="hljs-string">"cookie"</span>: <span class="hljs-string">"自己登录淘宝查询商品完成后的cookie"</span><br>&#125;<br>r = requests.get(url, timeout=<span class="hljs-number">30</span>, headers=headers)<br>r.raise_for_status()<br>r.encoding = r.apparent_encoding<br><span class="hljs-keyword">return</span> r.text<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-string">""</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parsePage</span><span class="hljs-params">(ilt, html)</span>:</span><br><span class="hljs-keyword">try</span>:<br>plt = re.findall(<span class="hljs-string">r'\"view_price\"\:\"[\d\.]*\"'</span>, html)<br>tlt = re.findall(<span class="hljs-string">r'\"raw_title\"\:\".*?\"'</span>, html)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(plt)):<br>price = eval(plt[i].split(<span class="hljs-string">":"</span>)[<span class="hljs-number">1</span>])<br>title = eval(tlt[i].split(<span class="hljs-string">":"</span>)[<span class="hljs-number">1</span>])<br>ilt.append([price, title])<br><span class="hljs-keyword">except</span>:<br>print(<span class="hljs-string">""</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printGoodsList</span><span class="hljs-params">(ilt)</span>:</span><br>tplt = <span class="hljs-string">"&#123;0:^4&#125;\t&#123;1:&lt;8&#125;\t&#123;2:&#123;3&#125;&lt;16&#125;"</span><br>print(tplt.format(<span class="hljs-string">"序号"</span>, <span class="hljs-string">"价格"</span>, <span class="hljs-string">"商品名称"</span>, chr(<span class="hljs-number">12288</span>)))<br>count = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> g <span class="hljs-keyword">in</span> ilt:<br>count = count + <span class="hljs-number">1</span><br>print(tplt.format(count, g[<span class="hljs-number">0</span>], g[<span class="hljs-number">1</span>], chr(<span class="hljs-number">12288</span>)))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>goods = <span class="hljs-string">'Dior口红'</span><br>depth = <span class="hljs-number">2</span><br>start_url = <span class="hljs-string">'https://s.taobao.com/search?q='</span> + goods<br>infoList = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(depth):<br><span class="hljs-keyword">try</span>:<br>url = start_url + <span class="hljs-string">'&amp;s='</span> + str(<span class="hljs-number">44</span> * i)<br>html = getHTMLText(url)<br>parsePage(infoList, html)<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">continue</span><br>printGoodsList(infoList)<br></code></pre></td></tr></table></figure><p><strong>注意：</strong>cookie的获取方式——查询结果网页中F12，点击Network，找到Name为search?q=DiorXXXXXX请求，在Headers下可以找到cookie和user-agent，不确定是否找对了没有可以看到General的Request URL是否和你现在浏览器的地址一致，翻到最下面也可以看到你查询的关键字信息。我用的是Pycharm，写代码的时候犯了一个致命错误，就是没有把右上角的运行程序改为当前的程序，对着错误代码的错误结果，改了一晚上正确代码，我真是醉了，好像是第二次了。以后只用快捷键运行程序了，怒。运行当前程序的快捷键是<strong>Ctrl+Shift+F10</strong>。</p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://cdn.jsdelivr.net/gh/daisf666/img/articleimg/20200421002929.png" alt="淘宝爬取Dior口红价格"></p>]]></content>
    
    <summary type="html">
    
      爬取淘宝商品价格和名称。
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 2 爬取2019年中国大学排行</title>
    <link href="http://yoursite.com/2020/04/20/2020-04-20-Python%E7%88%AC%E8%99%AB-day-2-%E7%88%AC%E5%8F%962019%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E6%8E%92%E8%A1%8C/"/>
    <id>http://yoursite.com/2020/04/20/2020-04-20-Python%E7%88%AC%E8%99%AB-day-2-%E7%88%AC%E5%8F%962019%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E6%8E%92%E8%A1%8C/</id>
    <published>2020-04-20T12:24:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/20 13:22</span><br><br><span class="hljs-keyword">import</span> bs4<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHtmltext</span><span class="hljs-params">(url, agent)</span>:</span><br><span class="hljs-keyword">try</span>:<br>r = requests.get(url,timeout=<span class="hljs-number">30</span>, headers=agent)<br>r.raise_for_status()<span class="hljs-comment"># 不为200报错</span><br>r.encoding = r.apparent_encoding<br>print(r.request.url)<br>print(r.request.headers)<br><span class="hljs-keyword">return</span> r.text<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>print(e)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fillUnivlist</span><span class="hljs-params">(ulist, html)</span>:</span><br>soup = bs4.BeautifulSoup(html, <span class="hljs-string">'html.parser'</span>)<br><span class="hljs-keyword">for</span> tr <span class="hljs-keyword">in</span> soup.find(<span class="hljs-string">'tbody'</span>).children:<br><span class="hljs-keyword">if</span> isinstance(tr, bs4.element.Tag):  <span class="hljs-comment"># 用来判断tr标签类型是否是bs4.element.Tag</span><br>tds = tr(<span class="hljs-string">'td'</span>)<span class="hljs-comment"># 在tr里查找td，等价tr.find('td')</span><br>ulist.append([tds[<span class="hljs-number">0</span>].string, tds[<span class="hljs-number">1</span>].string, tds[<span class="hljs-number">3</span>].string,])<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printUnivlist</span><span class="hljs-params">(ulist, num)</span>:</span><br>tplt = <span class="hljs-string">"&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:^10&#125;"</span><span class="hljs-comment"># &#123;3&#125;是format的第四个参数chr(12288)，^是居中对齐，学校名称是中文，所以填充不能用默认的西文空格填充，否则对不齐</span><br>print(tplt.format(<span class="hljs-string">"排名"</span>, <span class="hljs-string">"学校名称"</span>, <span class="hljs-string">"总分"</span>, chr(<span class="hljs-number">12288</span>)))    <span class="hljs-comment"># chr(12288)是中文字符空格</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(num):<br>u = ulist[i]<br>print(tplt.format(u[<span class="hljs-number">0</span>], u[<span class="hljs-number">1</span>], u[<span class="hljs-number">2</span>], chr(<span class="hljs-number">12288</span>)))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>agent = &#123;<span class="hljs-string">'user-agent'</span>:<span class="hljs-string">'Mozilla/5.0'</span>&#125;<br>uinfo = []<br>url = <span class="hljs-string">'http://www.zuihaodaxue.cn/zuihaodaxuepaiming2019.html'</span><br>html = getHtmltext(url, agent)<br>fillUnivlist(uinfo, html)<br>printUnivlist(uinfo, <span class="hljs-number">20</span>)<br></code></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://cdn.jsdelivr.net/gh/daisf666/img/articleimg/20200420203223.png" alt="2019年中国大学排行前20结果"></p>]]></content>
    
    <summary type="html">
    
      爬取2019年中国大学前20数据。
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-Day 1 爬取并保存某张图片</title>
    <link href="http://yoursite.com/2020/04/20/2020-04-20-Python%E7%88%AC%E8%99%AB-day-1-%E7%88%AC%E5%8F%96%E5%B9%B6%E4%BF%9D%E5%AD%98%E6%9F%90%E5%BC%A0%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2020/04/20/2020-04-20-Python%E7%88%AC%E8%99%AB-day-1-%E7%88%AC%E5%8F%96%E5%B9%B6%E4%BF%9D%E5%AD%98%E6%9F%90%E5%BC%A0%E5%9B%BE%E7%89%87/</id>
    <published>2020-04-20T05:34:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: gb2312 -*-</span><br><span class="hljs-comment"># Author : Daisf</span><br><span class="hljs-comment"># Date : 2020/4/20 13:22</span><br><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHtml</span><span class="hljs-params">(url,kw,agent,path)</span>:</span><br><span class="hljs-keyword">try</span>:<br>r = requests.get(url,timeout=<span class="hljs-number">30</span>, params=kw, headers=agent)<br>r.raise_for_status()<br>r.encoding = r.raise_for_status()<br>print(r.request.url)<br>print(r.request.headers)<br><span class="hljs-keyword">with</span> open(path, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> f:<br>f.write(r.content)<br><span class="hljs-keyword">return</span> len(r.text)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>print(e)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>agent = &#123;<span class="hljs-string">'user-agent'</span>:<span class="hljs-string">'Mozilla/5.0'</span>&#125;  <span class="hljs-comment"># 请求头</span><br>url = <span class="hljs-string">'http://image.ngchina.com.cn/2015/0323/20150323111050534.jpg'</span><br>kw = <span class="hljs-literal">None</span>   <span class="hljs-comment">#&#123;'wd':'python'&#125;   # 百度搜索关键字</span><br>path = <span class="hljs-string">'D:/Personal/Desktop/1.jpg'</span>   <span class="hljs-comment"># 图片保存路径</span><br>print(getHtml(url, kw, agent,path))<br></code></pre></td></tr></table></figure><p><strong>功能：</strong>爬取国家地理网站的一张图片并保存，部分代码为练习，可自行删除，写入文件要跟具体的文件名（1.jpg），只添加路径，没给文件命名，会报这个错<strong>PermissionError: [Errno 13] Permission denied:XXXXXX</strong>，保存路径注意要用斜杠”/“</p>]]></content>
    
    <summary type="html">
    
      学python不学点爬虫知识怎么行呢。
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook的安装与配置</title>
    <link href="http://yoursite.com/2020/04/16/2020-04-16-jupyter-notebook%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/04/16/2020-04-16-jupyter-notebook%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</id>
    <published>2020-04-16T13:35:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><code>pip install jupyter</code></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li><code>jupyter notebook --generate-config</code></li></ul><p>通常我们配置jupyter notebook只是更改默认启动目录，这条命令会在<strong>C:\Users\你的用户名.jupyter</strong>文件夹下生成<strong>jupyter_notebook_config.py</strong>配置文件，打开后搜索找到<br><strong>c.NotebookApp.notebook_dir = ‘在这里填上你需要的目录’</strong>，最后记得把前面的注释去掉，也就是‘#’。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install jupyter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="jupyter notebook" scheme="http://yoursite.com/tags/jupyter-notebook/"/>
    
  </entry>
  
  <entry>
    <title>关于QThead类中两个函数的理解</title>
    <link href="http://yoursite.com/2020/04/14/2020-04-14-%E5%85%B3%E4%BA%8EQThead%E7%B1%BB%E4%B8%AD%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/04/14/2020-04-14-%E5%85%B3%E4%BA%8EQThead%E7%B1%BB%E4%B8%AD%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3/</id>
    <published>2020-04-14T15:04:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>pyqtSignal()：指定这是一个带什么参数的信号</li><li>emit()：发射带什么参数的信号（不仅可以激活连接的槽函数，还可以传递参数给他）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;pyqtSignal()：指定这是一个带什么参数的信号&lt;/li&gt;
&lt;li&gt;emit()：发射带什么参数的信号（不仅可以激活连接的槽函数，还可以传递参数给他）&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="QThead" scheme="http://yoursite.com/tags/QThead/"/>
    
      <category term="线程" scheme="http://yoursite.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于视频中用cv2.imshow循环读取图片无法显示的解决方案</title>
    <link href="http://yoursite.com/2020/04/14/2020-04-14-%E5%85%B3%E4%BA%8E%E8%A7%86%E9%A2%91%E4%B8%AD%E7%94%A8cv2.imshow%E5%BE%AA%E7%8E%AF%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2020/04/14/2020-04-14-%E5%85%B3%E4%BA%8E%E8%A7%86%E9%A2%91%E4%B8%AD%E7%94%A8cv2.imshow%E5%BE%AA%E7%8E%AF%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-04-14T11:01:08.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>需配合cv2.waitkey()使用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需配合cv2.waitkey()使用&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Opencv" scheme="http://yoursite.com/tags/Opencv/"/>
    
  </entry>
  
  <entry>
    <title>关于JsDelivr需要注意的地方</title>
    <link href="http://yoursite.com/2020/04/03/2020-04-03-%E5%85%B3%E4%BA%8EJsDelivr%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/"/>
    <id>http://yoursite.com/2020/04/03/2020-04-03-%E5%85%B3%E4%BA%8EJsDelivr%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/</id>
    <published>2020-04-03T11:38:22.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在使用主题的某个功能的时候，老是失败，调开F12发现403，跳到拒绝访问的网址报错：Package size exceeded the configured limit of 50 MB. Try <del><em><a href="https://github.com/xxxx/xxxxx/xxx.jpg" target="_blank" rel="noopener">https://github.com/xxxx/xxxxx/xxx.jpg</a></em></del> instead，虽然知道字面意思是指包超出了50M，但却不知道是哪里的包太大了，十分无奈，然后百度了一通终于发现原来是release包太大了，所以说还是要尽量减少自己每个release的大小，如果说太大了建议分成几个仓库存放。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天在使用主题的某个功能的时候，老是失败，调开F12发现403，跳到拒绝访问的网址报错：Package size exceeded the configured limit of 50 MB. Try &lt;del&gt;&lt;em&gt;&lt;a href=&quot;https://github.com
      
    
    </summary>
    
    
      <category term="网站相关" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="cdn" scheme="http://yoursite.com/tags/cdn/"/>
    
      <category term="JsDelivr" scheme="http://yoursite.com/tags/JsDelivr/"/>
    
  </entry>
  
  <entry>
    <title>关于Wordpress固定链接出现404的解决方案</title>
    <link href="http://yoursite.com/2020/04/03/2020-04-03-%E5%85%B3%E4%BA%8Ewordpress%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5%E5%87%BA%E7%8E%B0404%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2020/04/03/2020-04-03-%E5%85%B3%E4%BA%8Ewordpress%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5%E5%87%BA%E7%8E%B0404%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-04-02T16:34:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>   这个困惑了我好几次每次都断断续续折腾我几小时的问题终于被我解决了，首先设置固定连接之前你需要设置好伪静态，我是在宝塔面板上设置的，我反反复复一直以为是我伪静态没有设置好，每次动不动404、500的，快要吐了，回归正题，接下来讲如何解决：</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>   500我就不讲了，在之前的帖子有，而这个404出现的时候我每次都会观察地址栏的链接，看着这一个个中文汉字，不知道为啥，我总是心慌慌的，结果不出我所料，果然是这里出了问题，你啥时候见过地址栏路径出现汉字的，（注意，我说的是路径）而且有一次我把一个分类随意设置了个英文别名，这个分类页面却可以访问，所以我大彻大悟般地把所有的分类都添加了英文别名，结果很显然，可以正常访问！这样既保证了显示中文的需求，又解决了404的文图，岂不美哉，当然，你也可以直接把分类都弄成英文，页面也是同样的道理，哎，经常被一些小问题折腾地死去活来，浪费了我多少宝贵的时间T T</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;   这个困惑了我好几次每次都断断续续折腾我几小时的问题终于被我解决了，首先设置固定连接之前你需要设置好伪静态，我是在宝塔面板上设置的，我反
      
    
    </summary>
    
    
      <category term="网站相关" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="404" scheme="http://yoursite.com/tags/404/"/>
    
  </entry>
  
  <entry>
    <title>因博主懒，此站停止更新（请跳转至：www.fjct.city）</title>
    <link href="http://yoursite.com/2020/04/02/2020-04-02-%E5%9B%A0%E5%8D%9A%E4%B8%BB%E7%B2%BE%E5%8A%9B%E6%9C%89%E9%99%90%EF%BC%8C%E6%AD%A4%E7%AB%99%E5%81%9C%E6%AD%A2%E6%9B%B4%E6%96%B0%EF%BC%88%E8%AF%B7%E8%B7%B3%E8%BD%AC%E8%87%B3%EF%BC%9Awww.fjct.city%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/02/2020-04-02-%E5%9B%A0%E5%8D%9A%E4%B8%BB%E7%B2%BE%E5%8A%9B%E6%9C%89%E9%99%90%EF%BC%8C%E6%AD%A4%E7%AB%99%E5%81%9C%E6%AD%A2%E6%9B%B4%E6%96%B0%EF%BC%88%E8%AF%B7%E8%B7%B3%E8%BD%AC%E8%87%B3%EF%BC%9Awww.fjct.city%EF%BC%89/</id>
    <published>2020-04-02T13:34:50.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Click-here"><a href="#Click-here" class="headerlink" title="Click here!"></a><strong><a href="https://www.fjct.city/" target="_blank" rel="noopener">Click here!</a></strong></h1><h1 id="I’m-waiting-for-you…"><a href="#I’m-waiting-for-you…" class="headerlink" title="I’m waiting for you…"></a>I’m waiting for you…</h1><h3 id="2020-4-2："><a href="#2020-4-2：" class="headerlink" title="2020.4.2："></a><strong>2020.4.2：</strong></h3><p>是的，没错，我又回来不定期更新了。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Click-here&quot;&gt;&lt;a href=&quot;#Click-here&quot; class=&quot;headerlink&quot; title=&quot;Click here!&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;https://www.fjct.city/&quot; target=&quot;_blank
      
    
    </summary>
    
    
      <category term="闲时杂谈" scheme="http://yoursite.com/categories/%E9%97%B2%E6%97%B6%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="停更" scheme="http://yoursite.com/tags/%E5%81%9C%E6%9B%B4/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda重新安装注意事项</title>
    <link href="http://yoursite.com/2020/03/31/2020-03-31-Anaconda%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2020/03/31/2020-03-31-Anaconda%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2020-03-31T12:28:58.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里还是建议安装原来的anaconda版本，以免出现一些冲突，重新安装Anaconda需要注意是否已经把anaconda完全删除干净，注册表是否清理完全（可以借助一些软件），完成这些之后如果在安装过程中出现勾选添加环境变量红字的情况，检查C:\Users\XXX下是否有anaconda的<code>.condarc</code>配置文件，如果有，请把它删除，重新运行安装程序即可发现红字不再显示。</p>]]></content>
    
    <summary type="html">
    
      由于我之前不小心误删了anaconda的文件，导致我无法更新conda，搜索解决办法试了都没啥用，无奈之下只好重新安装Anaconda。
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Anaconda" scheme="http://yoursite.com/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>Github项目-Tf-Pose-Estimation</title>
    <link href="http://yoursite.com/2020/03/31/2020-03-31-Github%E9%A1%B9%E7%9B%AE-tf-pose-estimation/"/>
    <id>http://yoursite.com/2020/03/31/2020-03-31-Github%E9%A1%B9%E7%9B%AE-tf-pose-estimation/</id>
    <published>2020-03-31T10:18:20.000Z</published>
    <updated>2020-05-14T15:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-搭建虚拟环境"><a href="#1-搭建虚拟环境" class="headerlink" title="1.搭建虚拟环境"></a>1.搭建虚拟环境</h3><p>（1）激活环境，先进行下列操作（为了安装requirements.txt的时候不报错）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">pip install Cython<br>pip install numpy<br></code></pre></td></tr></table></figure><p><strong>注意：后面如果还遇到“No module named xxx”的问题，直接pip install就行</strong></p><p>（2）<a href="https://gitee.com/daisf666/cocoapi" target="_blank" rel="noopener">点这里</a>，往下滑，找到下载Visual C++ 2015 build tools的地方，下载完成后选择默认安装，不装的话在安装pycocotools的时候会报错。</p><p>（3）cd到文件目录下安装：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> -r requirements.txt<br>pip <span class="hljs-keyword">install</span> opencv-python<br>pip <span class="hljs-keyword">install</span> tensorflow-gpu==<span class="hljs-number">1.13</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>（tensorpack）TensorFlow ≥ 1.5, &lt; 2. </p><p>（tf-pose-estimation）Tensorflow 1.4.1+</p><p>所以我选择了1.13.2，刚好可以和我的cuda10配套使用。</p><p>对于requirements.txt我做了如下修改：</p><p><img src="http://s1.wailian.download/2020/03/31/Snipaste_2020-03-31_18-44-02.png" alt="Snipaste_2020-03-31_18-44-02.png"></p><h3 id="2-编译用于后期处理的C-库"><a href="#2-编译用于后期处理的C-库" class="headerlink" title="2.编译用于后期处理的C++库"></a>2.编译用于后期处理的C++库</h3><p>（1）先下载swig，然后用swig命令去编译<br><a href="http://www.swig.org/download.html" target="_blank" rel="noopener">下载地址</a>    <strong>注意：选择swigwin，因为是windows系统下安装，不要下错了。</strong><br>解压到任意目录，我这里放在C:\swigwin-4.0.1，把该目录加入环境变量path，右键“此电脑”-属性-高级系统设置-环境变量-系统变量-path，例如我是F:\swigwin-4.0.1，添加进path即可。添加完成后打开cmd，输入<code>swig --help</code>查看是否成功。<br>（2）cd tf-pose-estimation/tf_pose/pafprocess/<br>运行：swig -python -c++ pafprocess.i &amp;&amp; python3 setup.py build_ext –inplace</p><h3 id="3-模型"><a href="#3-模型" class="headerlink" title="3.模型"></a>3.模型</h3><p>该项目提供的文件有四个：</p><ul><li>cmu (trained in 656x368)</li><li>mobilenet_thin (trained in 432x368)</li><li>mobilenet_v2_large (trained in 432x368)</li><li>mobilenet_v2_small (trained in 432x368) </li></ul><p>对于git，CMU的模型太大，因此作者将其上传到外部云中，如果要使用cmu的原始模型，则要自己下载它们，作者在模型文件夹中提供了下载脚本。</p><h3 id="4-需要解决的问题"><a href="#4-需要解决的问题" class="headerlink" title="4.需要解决的问题"></a>4.需要解决的问题</h3><p><strong>（1）No module named ‘tensorflow.contrib.tensorrt’</strong></p><p>这是我的头号大敌，我快给他整崩溃了，网上到处寻找解决方案无果，改成from xxx 也是不行的，然后我在官网看到<strong>tensorrt在windows下不支持python</strong>，于是我转战我的Ubuntu一顿操作，装了CUAD，Cudnn，Anaconda，Pycharm，开始搭建环境，安装这些东西也出现了一些问题，各种解决，直到<strong>Pre-Install Jetson case</strong>这一步的时候，我始终无法定位到资源包。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">$ sudo apt-<span class="hljs-keyword">get</span> install libllvm<span class="hljs-number">-7</span>-ocaml-dev libllvm7 llvm<span class="hljs-number">-7</span> llvm<span class="hljs-number">-7</span>-dev llvm<span class="hljs-number">-7</span>-doc llvm<span class="hljs-number">-7</span>-examples llvm<span class="hljs-number">-7</span>-runtime<br>$ export LLVM_CONFIG=/usr/bin/llvm-config<span class="hljs-number">-7</span><br></code></pre></td></tr></table></figure><p>解决无果，我又回到Win10继续思考，最后没想到只要把\tf-pose-estimation\tf_pose\estimator.py第14行</p><p><code>import tensorflow.contrib.tensorrt as trt</code></p><p>注释掉就好了，天呐，我醉了。（其实我是在气急败坏的时候把它删了的时候才发现的- -）</p><p><strong>（2）UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">python run_webcam.py <span class="hljs-attribute">--model</span>=mobilenet_thin <span class="hljs-attribute">--resize</span>=432x368 <span class="hljs-attribute">--camera</span>=0<br></code></pre></td></tr></table></figure><p>这一步是通过调用摄像头，按理说应该是没什么问题的，已经初步成功了。</p><p>接着识别已经在目录下的图片，执行：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">python run.py <span class="hljs-attribute">--model</span>=mobilenet_thin <span class="hljs-attribute">--resize</span>=432x368 <span class="hljs-attribute">--image</span>=./images/p1.jpg<br></code></pre></td></tr></table></figure><p>出现报错：<strong>UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.</strong>解决方法：打开tf-pose-estimation中的run.py文件，将第56行<code>import matplotlib.pyplot as plt</code> 改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib<br>matplotlib.use(<span class="hljs-string">'TkAgg'</span>)<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br></code></pre></td></tr></table></figure><p><strong>（3）执行视频文件时几乎没有骨骼识别的痕迹。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python run_video.py --model=mobilenet_thin --resolution=<span class="hljs-number">432</span>x368 --video=./etcs/dance.mp4<br></code></pre></td></tr></table></figure><p>执行发现，舞者跳舞的时候，没有骨骼识别的痕迹。打开tf-pose-estimation中的run_video.py文件<br>解决办法：<br>（1）添加一段代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">parser.add_argument(<span class="hljs-string">'--resize-out-ratio'</span>, type=float, default=<span class="hljs-number">4.0</span>, help=<span class="hljs-string">'if provided, resize heatmaps before they are post-processed. default=1.0'</span>)<br></code></pre></td></tr></table></figure><p>（2）下方的while cap.isOpened()中humans = e.inference(image)改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">humans = e.inference(image, resize_to_default=(w &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> h &gt; <span class="hljs-number">0</span>), upsample_size=args.resize_out_ratio)<br></code></pre></td></tr></table></figure><h3 id="到此所有问题都解决了-真是不容易啊，欧拉欧拉欧拉欧拉欧拉"><a href="#到此所有问题都解决了-真是不容易啊，欧拉欧拉欧拉欧拉欧拉" class="headerlink" title="到此所有问题都解决了,真是不容易啊，欧拉欧拉欧拉欧拉欧拉~~~"></a><em>到此所有问题都解决了,真是不容易啊，欧拉欧拉欧拉欧拉欧拉~~~</em></h3>]]></content>
    
    <summary type="html">
    
      这两天一直在折腾tf-pose-estimation这个项目，踩了不少坑，还换着Ubuntu踩，最后总算是运行成功了，接下来就可以自己对代码去做些修改，去实现自己想要的功能了。
    
    </summary>
    
    
      <category term="Github项目" scheme="http://yoursite.com/categories/Github%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="tf-pose" scheme="http://yoursite.com/tags/tf-pose/"/>
    
  </entry>
  
</feed>
